(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{564:function(a,t,s){"use strict";s.r(t);var e=s(12),r=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"php开发规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#php开发规范"}},[a._v("#")]),a._v(" PHP开发规范")]),a._v(" "),s("h2",{attrs:{id:"一、编程规约"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、编程规约"}},[a._v("#")]),a._v(" 一、编程规约")]),a._v(" "),s("h3",{attrs:{id:"一-命名风格"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一-命名风格"}},[a._v("#")]),a._v(" (一)命名风格")]),a._v(" "),s("h6",{attrs:{id:"_1-【强制】代码中的命名均不能以下划线或美元符号开始-也不能以下划线或美元符号结束。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-【强制】代码中的命名均不能以下划线或美元符号开始-也不能以下划线或美元符号结束。"}},[a._v("#")]),a._v(" 1. 【强制】代码中的命名均不能以下划线或美元符号开始，也不能以下划线或美元符号结束。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    反例：_name / __name / $name / name_ / name$ / name__ \n")])])]),s("h6",{attrs:{id:"_2-【强制】代码中的命名严禁使用拼音与英文混合的方式-更不允许直接使用中文的方式。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-【强制】代码中的命名严禁使用拼音与英文混合的方式-更不允许直接使用中文的方式。"}},[a._v("#")]),a._v(" 2. 【强制】代码中的命名严禁使用拼音与英文混合的方式，更不允许直接使用中文的方式。")]),a._v(" "),s("h6",{attrs:{id:"说明-正确的英文拼写和语法可以让阅读者易于理解-避免歧义。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#说明-正确的英文拼写和语法可以让阅读者易于理解-避免歧义。"}},[a._v("#")]),a._v(" 说明：正确的英文拼写和语法可以让阅读者易于理解，避免歧义。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    正例：alibaba / taobao / youku / hangzhou 等国际通用的名称，可视同英文。 \n    反例：DaZhePromotion [打折] / getPingfenByName() [评分] / int 某变量 = 3\n")])])]),s("h6",{attrs:{id:"_3-【强制】类名使用-uppercamelcase-风格-但以下情形例外-do-bo-dto-vo-ao-po-uid-等。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-【强制】类名使用-uppercamelcase-风格-但以下情形例外-do-bo-dto-vo-ao-po-uid-等。"}},[a._v("#")]),a._v(" 3. 【强制】类名使用 UpperCamelCase 风格，但以下情形例外：DO / BO / DTO / VO / AO / PO / UID 等。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    正例：MarcoPolo / UserDO / XmlService / TcpUdpDeal / TaPromotion \n    反例：macroPolo / UserDo / XMLService / TCPUDPDeal / TAPromotion \n")])])]),s("h6",{attrs:{id:"_4-【强制】方法名、参数名、成员变量、局部变量都统一使用-lowercamelcase-风格-必须遵从驼峰形式。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-【强制】方法名、参数名、成员变量、局部变量都统一使用-lowercamelcase-风格-必须遵从驼峰形式。"}},[a._v("#")]),a._v(" 4. 【强制】方法名、参数名、成员变量、局部变量都统一使用 lowerCamelCase 风格，必须遵从驼峰形式。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    正例： localValue / getHttpMessage() / inputUserId \n")])])]),s("h6",{attrs:{id:"_5-【强制】常量命名全部大写-单词间用下划线隔开-力求语义表达完整清楚-不要嫌名字长。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-【强制】常量命名全部大写-单词间用下划线隔开-力求语义表达完整清楚-不要嫌名字长。"}},[a._v("#")]),a._v(" 5. 【强制】常量命名全部大写，单词间用下划线隔开，力求语义表达完整清楚，不要嫌名字长。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    正例：MAX_STOCK_COUNT \n    反例：MAX_COUNT \n")])])]),s("h6",{attrs:{id:"_6-【强制】抽象类命名使用-abstract-或-base-开头-异常类命名使用-exception-结尾-测试类-命名以它要测试的类的名称开始-以-test-结尾。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-【强制】抽象类命名使用-abstract-或-base-开头-异常类命名使用-exception-结尾-测试类-命名以它要测试的类的名称开始-以-test-结尾。"}},[a._v("#")]),a._v(" 6. 【强制】抽象类命名使用 Abstract 或 Base 开头；异常类命名使用 Exception 结尾；测试类 命名以它要测试的类的名称开始，以 Test 结尾。")]),a._v(" "),s("h6",{attrs:{id:"_7-【强制】杜绝完全不规范的缩写-避免望文不知义。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-【强制】杜绝完全不规范的缩写-避免望文不知义。"}},[a._v("#")]),a._v(" 7. 【强制】杜绝完全不规范的缩写，避免望文不知义。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    反例：AbstractClass“缩写”命名成 AbsClass；condition“缩写”命名成 condi，此类随 意缩写严重降低了代码的可阅读性。 \n")])])]),s("h6",{attrs:{id:"_8-【强制】为了达到代码自解释的目标-任何自定义编程元素在命名时-使用尽量完整的单词-组合来表达其意。禁止使用类似于function-a-p1-a这样的变量或方法定义-每个变量和方法名必须由适合的英文单词组成。如需使用缩写-需要注释上完整词义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-【强制】为了达到代码自解释的目标-任何自定义编程元素在命名时-使用尽量完整的单词-组合来表达其意。禁止使用类似于function-a-p1-a这样的变量或方法定义-每个变量和方法名必须由适合的英文单词组成。如需使用缩写-需要注释上完整词义"}},[a._v("#")]),a._v(" 8. 【强制】为了达到代码自解释的目标，任何自定义编程元素在命名时，使用尽量完整的单词 组合来表达其意。禁止使用类似于function a, $p1, $a这样的变量或方法定义，每个变量和方法名必须由适合的英文单词组成。如需使用缩写，需要注释上完整词义")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    正例：$insertRes = $userModel->getOneById(); \n    反例：$a = $class->test()\n")])])]),s("h6",{attrs:{id:"_9-【推荐】如果模块、接口、类、方法使用了设计模式-在命名时需体现出具体模式。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-【推荐】如果模块、接口、类、方法使用了设计模式-在命名时需体现出具体模式。"}},[a._v("#")]),a._v(" 9. 【推荐】如果模块、接口、类、方法使用了设计模式，在命名时需体现出具体模式。")]),a._v(" "),s("ul",[s("li",[a._v("说明：将设计模式体现在名字中，有利于阅读者快速理解架构设计理念。")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    正例 public class OrderFactory; \n         public class LoginProxy; \n         public class ResourceObserver; \n")])])]),s("h6",{attrs:{id:"_10-【参考】枚举类名建议带上-enum-后缀-枚举成员名称需要全大写-单词间用下划线隔开。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-【参考】枚举类名建议带上-enum-后缀-枚举成员名称需要全大写-单词间用下划线隔开。"}},[a._v("#")]),a._v(" 10. 【参考】枚举类名建议带上 Enum 后缀，枚举成员名称需要全大写，单词间用下划线隔开。")]),a._v(" "),s("ul",[s("li",[a._v("说明：枚举其实就是特殊的类，域成员均为常量，且构造方法被默认强制是私有。")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    正例：枚举名字为 ProcessStatusEnum 的成员名称：SUCCESS / UNKNOWN_REASON。 \n")])])]),s("h6",{attrs:{id:"_11-【参考】各层命名规约"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-【参考】各层命名规约"}},[a._v("#")]),a._v(" 11. 【参考】各层命名规约：")]),a._v(" "),s("ul",[s("li",[a._v("Controller/Model层方法命名规约\n"),s("ul",[s("li",[a._v("获取单个对象的方法用 get 做前缀。")]),a._v(" "),s("li",[a._v("获取多个对象的方法用 list 做前缀，复数形式结尾如：listUsers。")]),a._v(" "),s("li",[a._v("获取统计值的方法用 count 做前缀。")]),a._v(" "),s("li",[a._v("插入的方法用 save/insert/add做前缀。")]),a._v(" "),s("li",[a._v("删除的方法用 remove/delete 做前缀。")]),a._v(" "),s("li",[a._v("修改的方法用 update 做前缀。")])])])]),a._v(" "),s("h3",{attrs:{id:"二-常量定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二-常量定义"}},[a._v("#")]),a._v(" (二)常量定义")]),a._v(" "),s("h6",{attrs:{id:"_1-【强制】不允许任何魔法值-即未经预先定义的常量-直接出现在代码中。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-【强制】不允许任何魔法值-即未经预先定义的常量-直接出现在代码中。"}},[a._v("#")]),a._v(" 1. 【强制】不允许任何魔法值（即未经预先定义的常量）直接出现在代码中。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    反例：public $logFileName = config('PIC_PATH') . 'debug.log'  \n")])])]),s("h6",{attrs:{id:"_3-【强制】不要使用一个常量类维护所有常量-要按常量功能进行归类-分开维护。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-【强制】不要使用一个常量类维护所有常量-要按常量功能进行归类-分开维护。"}},[a._v("#")]),a._v(" 3. 【强制】不要使用一个常量类维护所有常量，要按常量功能进行归类，分开维护。")]),a._v(" "),s("ul",[s("li",[a._v("说明：大而全的常量类，杂乱无章，使用查找功能才能定位到修改的常量，不利于理解和维护。")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    正例：缓存相关常量放在类 CacheConsts 下；系统配置相关常量放在类 ConfigConsts 下。\n")])])]),s("h3",{attrs:{id:"三-代码格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三-代码格式"}},[a._v("#")]),a._v(" (三)代码格式")]),a._v(" "),s("h6",{attrs:{id:"_1-【强制】大括号的使用约定。如果是大括号内为空-则简洁地写成-即可-不需要换行-如果-是非空代码块则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-【强制】大括号的使用约定。如果是大括号内为空-则简洁地写成-即可-不需要换行-如果-是非空代码块则"}},[a._v("#")]),a._v(" 1. 【强制】大括号的使用约定。如果是大括号内为空，则简洁地写成{}即可，不需要换行；如果 是非空代码块则：")]),a._v(" "),s("ul",[s("li",[a._v("左大括号前不换行")]),a._v(" "),s("li",[a._v("左大括号后换行")]),a._v(" "),s("li",[a._v("右大括号前换行")]),a._v(" "),s("li",[a._v("右大括号后还有 else 等代码则不换行；表示终止的右大括号后必须换行")])]),a._v(" "),s("h6",{attrs:{id:"_2-【强制】左小括号和字符之间不出现空格-同样-右小括号和字符之间也不出现空格-而左大-括号前需要空格。详见第-5-条下方正例提示。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-【强制】左小括号和字符之间不出现空格-同样-右小括号和字符之间也不出现空格-而左大-括号前需要空格。详见第-5-条下方正例提示。"}},[a._v("#")]),a._v(" 2. 【强制】左小括号和字符之间不出现空格；同样，右小括号和字符之间也不出现空格；而左大 括号前需要空格。详见第 5 条下方正例提示。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    反例：if (空格 a == b 空格) \n")])])]),s("h6",{attrs:{id:"_3-【强制】if-for-while-switch-do-等保留字与括号之间都必须加空格。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-【强制】if-for-while-switch-do-等保留字与括号之间都必须加空格。"}},[a._v("#")]),a._v(" 3. 【强制】if/for/while/switch/do 等保留字与括号之间都必须加空格。")]),a._v(" "),s("h6",{attrs:{id:"_4-【强制】任何二目、三目运算符的左右两边都需要加一个空格。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-【强制】任何二目、三目运算符的左右两边都需要加一个空格。"}},[a._v("#")]),a._v(" 4. 【强制】任何二目、三目运算符的左右两边都需要加一个空格。")]),a._v(" "),s("ul",[s("li",[a._v("说明：运算符包括赋值运算符=、逻辑运算符&&、加减乘除符号等。")])]),a._v(" "),s("h6",{attrs:{id:"_5-【强制】采用-4-个空格缩进-禁止使用-tab-字符。-说明-如果使用-tab-缩进-必须设置-1-个-tab-为-4-个空格。idea-设置-tab-为-4-个空格时-请勿勾选-use-tab-character-而在-eclipse-中-必须勾选-insert-spaces-for-tabs。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-【强制】采用-4-个空格缩进-禁止使用-tab-字符。-说明-如果使用-tab-缩进-必须设置-1-个-tab-为-4-个空格。idea-设置-tab-为-4-个空格时-请勿勾选-use-tab-character-而在-eclipse-中-必须勾选-insert-spaces-for-tabs。"}},[a._v("#")]),a._v(" 5. 【强制】采用 4 个空格缩进，禁止使用 tab 字符。 说明：如果使用 tab 缩进，必须设置 1 个 tab 为 4 个空格。IDEA 设置 tab 为 4 个空格时， 请勿勾选 Use tab character；而在 eclipse 中，必须勾选 insert spaces for tabs。")]),a._v(" "),s("ul",[s("li",[a._v("注意：phpStorm中，Ctrl+Shift+L 自动格式化代码 会部分格式化，function后面的大括号会换行")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    正例： （涉及 1-5 点）\n    public function ListProducts() { // 左大括号前需要空格，左大括号前不换行，左大括号后换行\n        $model = new XpointProduct();\n        $list = $model->getList();\n\n        // if/for/while/switch/do 等保留字与括号之间都必须加空格。\n        if (null != $list && !empty($list)) { // 左小括号和字符之间不出现空格,同样，右小括号和字符之间也不出现空格；而左大括号前需要空格任何二目、三目运算符的左右两边都需要加一个空格\n            return $list;\n        } else {// 右大括号后还有 else 等代码则不换行\n            return false;\n        }\n    }// 表示终止的右大括号后必须换行\n")])])]),s("h6",{attrs:{id:"_6-【强制】注释的双斜线与注释内容之间有且仅有一个空格。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-【强制】注释的双斜线与注释内容之间有且仅有一个空格。"}},[a._v("#")]),a._v(" 6. 【强制】注释的双斜线与注释内容之间有且仅有一个空格。")]),a._v(" "),s("h6",{attrs:{id:"_7-【强制】单行字符数限制不超过-120-个-超出需要换行-换行时遵循如下原则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-【强制】单行字符数限制不超过-120-个-超出需要换行-换行时遵循如下原则"}},[a._v("#")]),a._v(" 7. 【强制】单行字符数限制不超过 120 个，超出需要换行，换行时遵循如下原则：")]),a._v(" "),s("ul",[s("li",[a._v("第二行相对第一行缩进 4 个空格，从第三行开始，不再继续缩进，参考示例")]),a._v(" "),s("li",[a._v("运算符与下文一起换行")]),a._v(" "),s("li",[a._v("方法调用的点符号与下文一起换行")]),a._v(" "),s("li",[a._v("方法调用中的多个参数需要换行时，在逗号后进行")]),a._v(" "),s("li",[a._v("在括号前不要换行，见反例")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("   正例：\n   public function productListsByUid($uid){\n       if (!$uid) {\n           return false;\n       }\n       try {\n           $list = $this->alias('p')\n               ->join('app_users u', 'p.id = u.product_id')\n               ->field('u.name,p.name as product_name,p.create_time')\n               ->where('u.id', $uid)\n               ->page(1, 10)\n               ->select();\n           if ($list) {\n               return $list;\n           } else {\n               return false;\n           }\n       } catch (Exception $e) {\n           return false;\n       }\n   }\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    反例：\n    public function productListsByUid($uid){\n        if (!$uid) {\n            return false;\n        }\n        try {\n            // 一行到底\n            $list = $this->alias('p')->join('app_users u', 'p.id = u.product_id')->field('u.name,p.name as product_name,p.create_time')->where('u.id', $uid)->page(1, 10)->select();\n            // 或 括号前换行\n            $list = $this->alias('p')->\n            join('app_users u', 'p.id = u.product_id')->\n            field('u.name,p.name as product_name,p.create_time')->\n            where('u.id', $uid)->page(1, 10)->select();\n            if ($list) {\n                return $list;\n            } else {\n                return false;\n            }\n        } catch (Exception $e) {\n            return false;\n        }\n    }\n\n")])])]),s("h6",{attrs:{id:"_8-【强制】方法参数在定义和传入时-多个参数逗号后边必须加空格。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-【强制】方法参数在定义和传入时-多个参数逗号后边必须加空格。"}},[a._v("#")]),a._v(" 8. 【强制】方法参数在定义和传入时，多个参数逗号后边必须加空格。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    正例：下例中实参的 args1，后边必须要有一个空格。\n    method($args1, $args2, $args3);\n")])])]),s("h6",{attrs:{id:"_9-【强制】phpstorm的-text-file-encoding-设置为-utf-8-ide-中文件的换行符使用-unix-格式-禁止使用-windows-格式。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-【强制】phpstorm的-text-file-encoding-设置为-utf-8-ide-中文件的换行符使用-unix-格式-禁止使用-windows-格式。"}},[a._v("#")]),a._v(" 9. 【强制】phpStorm的 text file encoding 设置为 UTF-8; IDE 中文件的换行符使用 Unix 格式，禁止使用 Windows 格式。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    设置方法：File->Settings->Editor->File Encodings\n")])])]),s("h6",{attrs:{id:"_10-【推荐】单个方法的总行数不超过-80-行。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-【推荐】单个方法的总行数不超过-80-行。"}},[a._v("#")]),a._v(" 10. 【推荐】单个方法的总行数不超过 80 行。")]),a._v(" "),s("h6",{attrs:{id:"说明-包括方法签名、结束右大括号、方法内代码、注释、空行、回车及任何不可见字符的总行数不超过-80-行。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#说明-包括方法签名、结束右大括号、方法内代码、注释、空行、回车及任何不可见字符的总行数不超过-80-行。"}},[a._v("#")]),a._v(" 说明：包括方法签名、结束右大括号、方法内代码、注释、空行、回车及任何不可见字符的总行数不超过 80 行。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    正例：\n    代码逻辑分清红花和绿叶，个性和共性，绿叶逻辑单独出来成为额外方法，使主干代码更加清晰；共性逻辑抽取成为共性方法，便于复用和维护。\n")])])]),s("h6",{attrs:{id:"_11-【推荐】没有必要增加若干空格来使某一行的字符与上一行对应位置的字符对齐。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-【推荐】没有必要增加若干空格来使某一行的字符与上一行对应位置的字符对齐。"}},[a._v("#")]),a._v(" 11. 【推荐】没有必要增加若干空格来使某一行的字符与上一行对应位置的字符对齐。")]),a._v(" "),s("h6",{attrs:{id:"_12-【推荐】不同逻辑、不同语义、不同业务的代码之间插入一个空行分隔开来以提升可读性。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-【推荐】不同逻辑、不同语义、不同业务的代码之间插入一个空行分隔开来以提升可读性。"}},[a._v("#")]),a._v(" 12. 【推荐】不同逻辑、不同语义、不同业务的代码之间插入一个空行分隔开来以提升可读性。")]),a._v(" "),s("h3",{attrs:{id:"七-控制语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#七-控制语句"}},[a._v("#")]),a._v(" (七)控制语句")]),a._v(" "),s("h6",{attrs:{id:"_1-【强制】在一个-switch-块内-每个-case-要么通过-break-return-等来终止-要么注释说明程-case-为止-在一个-switch-块内-都必须包含一个-default-语句并且放在最后-即使空代码。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-【强制】在一个-switch-块内-每个-case-要么通过-break-return-等来终止-要么注释说明程-case-为止-在一个-switch-块内-都必须包含一个-default-语句并且放在最后-即使空代码。"}},[a._v("#")]),a._v(" 1. 【强制】在一个 switch 块内，每个 case 要么通过 break/return 等来终止，要么注释说明程 case 为止；在一个 switch 块内，都必须包含一个 default 语句并且放在最后，即使空代码。")]),a._v(" "),s("h6",{attrs:{id:"_2-【强制】在-if-else-for-while-do-语句中必须使用大括号。即使只有一行代码-避免采用单行的编码方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-【强制】在-if-else-for-while-do-语句中必须使用大括号。即使只有一行代码-避免采用单行的编码方式"}},[a._v("#")]),a._v(" 2. 【强制】在 if/else/for/while/do 语句中必须使用大括号。即使只有一行代码，避免采用单行的编码方式")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    正例：\n    if (condition) {\n        return false; \n    }\n    反例\n    if (condition) return false; \n")])])]),s("h6",{attrs:{id:"_3-【强制】在高并发场景中-避免使用-等于-判断作为中断或退出的条件。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-【强制】在高并发场景中-避免使用-等于-判断作为中断或退出的条件。"}},[a._v("#")]),a._v(" 3. 【强制】在高并发场景中，避免使用”等于”判断作为中断或退出的条件。")]),a._v(" "),s("ul",[s("li",[a._v("说明：如果并发控制没有处理好，容易产生等值判断被“击穿”的情况，使用大于或小于的区间判断条件来代替。")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    反例：判断剩余奖品数量等于 0时，终止发放奖品，但因为并发处理错误导奖品数量瞬间变成了负数，这样的话，活动无法终止。\n")])])]),s("h6",{attrs:{id:"_4-【推荐】表达异常的分支时-少用-if-else-方式-这种方式可以改写成"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-【推荐】表达异常的分支时-少用-if-else-方式-这种方式可以改写成"}},[a._v("#")]),a._v(" 4. 【推荐】表达异常的分支时，少用 if-else 方式，这种方式可以改写成：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    if (condition) {\n         ...\n         return obj;\n    }\n    // 接着写 else 的业务逻辑代码;\n")])])]),s("ul",[s("li",[a._v("说明：如果非得使用 if()...else if()...else...方式表达逻辑，【强制】避免后续代码维护困难，请勿超过 3 层。")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    正例：超过 3 层的 if-else 的逻辑判断代码可以使用卫语句、策略模式、状态模式等来实现，其中卫语句示例如下：\n    if (!$item || $item['current'] + 10 < $len[0]) {\n        return false;\n    }\n    if (!$teamuser['rid'] || !$item['rid']) {\n        return false;\n    }\n    $rid_arr = explode(',', $teamuser['rid']);\n    if (in_array($item['rid'], $rid_arr)) { \n        return false;        \n    }\n    $m_Team = new Team();\n    $team = $m_Team->getStartEnd($teamuser['tid']);\n    if (!($team && time() > $team['start'] && time() < $team['end'])) {\n        return false;\n    }\n    \n    $rid_arr[] = $item['rid'];\n    $new_rid = implode(',', $rid_arr);\n    if ($new_rid) {\n        return $new_rid;\n    }\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    反例：\n        if ($item['current'] && $item['current'] + 10 >= $len[0]) {\n            if ($teamuser['rid'] && $item['rid']) {\n                $rid_arr = explode(',', $teamuser['rid']);\n                if (!in_array($item['rid'], $rid_arr)) {\n                    $m_Team = new Team();\n                    $team = $m_Team->getStartEnd($teamuser['tid']);\n                    if ($team && time() > $team['start'] && time() < $team['end']) {\n                        $rid_arr[] = $item['rid'];\n                        $new_rid = implode(',', $rid_arr);\n                        if ($new_rid) {\n                            return $new_rid;\n                        }\n                    }\n                }\n            } \n        }\n")])])]),s("h6",{attrs:{id:"_5-【推荐】除常用方法-如-getxxx-isxxx-等外-不要在条件判断中执行其它复杂的语句-将复杂逻辑判断的结果赋值给一个有意义的布尔变量名-以提高可读性。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-【推荐】除常用方法-如-getxxx-isxxx-等外-不要在条件判断中执行其它复杂的语句-将复杂逻辑判断的结果赋值给一个有意义的布尔变量名-以提高可读性。"}},[a._v("#")]),a._v(" 5. 【推荐】除常用方法（如 getXxx/isXxx）等外，不要在条件判断中执行其它复杂的语句，将复杂逻辑判断的结果赋值给一个有意义的布尔变量名，以提高可读性。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('说明：很多 if 语句内的逻辑相当复杂，阅读者需要分析条件表达式的最终结果，才能明确什么\n样的条件执行什么样的语句，那么，如果阅读者分析逻辑表达式错误呢？\n正例：\n// 伪代码如下\n$existed = (file.open(fileName, "w") != null) && (...) || (...);\nif ($existed) {\n // xxx code\n}\n反例：\nif ((file.open(fileName, "w") != null) && (...) || (...)) {\n // xxx code\n}\n')])])]),s("h6",{attrs:{id:"_7-【推荐】避免采用取反逻辑运算符。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-【推荐】避免采用取反逻辑运算符。"}},[a._v("#")]),a._v(" 7. 【推荐】避免采用取反逻辑运算符。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("- 说明：取反逻辑不利于快速理解，并且取反逻辑写法必然存在对应的正向逻辑写法。\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    正例：使用 if (x < 628) 来表达 x 小于 628。\n    反例：使用 if (!(x >= 628)) 来表达 x 小于 628。\n")])])]),s("h6",{attrs:{id:"_10-【强制】不是自己生产的变量-都需要进行参数校验"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-【强制】不是自己生产的变量-都需要进行参数校验"}},[a._v("#")]),a._v(" 10. 【强制】不是自己生产的变量，都需要进行参数校验")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    正例：\n    $user = $userModel->getByUid($uid);\n    if ($user) {\n        $class = $classModel->getByCid($user['class_id']);\n    }\n    \n    反例：\n    $user = $userModel->getByUid($uid);\n    $class = $classModel->getByCid($user['class_id']);\n")])])]),s("h3",{attrs:{id:"八-注释规约"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#八-注释规约"}},[a._v("#")]),a._v(" (八)注释规约")]),a._v(" "),s("h6",{attrs:{id:"_1-【强制】类、类属性、类方法的注释必须使用-javadoc-规范-使用-内容-格式-不得使用-xxx-方式。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-【强制】类、类属性、类方法的注释必须使用-javadoc-规范-使用-内容-格式-不得使用-xxx-方式。"}},[a._v("#")]),a._v(" 1. 【强制】类、类属性、类方法的注释必须使用 Javadoc 规范，使用/*"),s("em",[a._v("内容")]),a._v("/格式，不得使用// xxx 方式。")]),a._v(" "),s("h6",{attrs:{id:"_2-【强制】方法内部单行注释-在被注释语句上方另起一行-使用-注释。方法内部多行注释使用-注释-注意与代码对齐。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-【强制】方法内部单行注释-在被注释语句上方另起一行-使用-注释。方法内部多行注释使用-注释-注意与代码对齐。"}},[a._v("#")]),a._v(" 2. 【强制】方法内部单行注释，在被注释语句上方另起一行，使用//注释。方法内部多行注释使用/* */注释，注意与代码对齐。")]),a._v(" "),s("h6",{attrs:{id:"_3-【强制】所有的枚举类型字段必须要有注释-说明每个数据项的用途。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-【强制】所有的枚举类型字段必须要有注释-说明每个数据项的用途。"}},[a._v("#")]),a._v(" 3. 【强制】所有的枚举类型字段必须要有注释，说明每个数据项的用途。")]),a._v(" "),s("h6",{attrs:{id:"_4-【推荐】代码修改的同时-注释也要进行相应的修改-尤其是参数、返回值、异常、核心逻辑等的修改。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-【推荐】代码修改的同时-注释也要进行相应的修改-尤其是参数、返回值、异常、核心逻辑等的修改。"}},[a._v("#")]),a._v(" 4. 【推荐】代码修改的同时，注释也要进行相应的修改，尤其是参数、返回值、异常、核心逻辑等的修改。")]),a._v(" "),s("ul",[s("li",[a._v("说明：代码与注释更新不同步，就像路网与导航软件更新不同步一样，如果导航软件严重滞后，就失去了导航的意义。")])]),a._v(" "),s("h6",{attrs:{id:"_5-【参考】谨慎注释掉代码。在上方详细说明-而不是简单地注释掉。如果无用-则删除。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-【参考】谨慎注释掉代码。在上方详细说明-而不是简单地注释掉。如果无用-则删除。"}},[a._v("#")]),a._v(" 5. 【参考】谨慎注释掉代码。在上方详细说明，而不是简单地注释掉。如果无用，则删除。")]),a._v(" "),s("ul",[s("li",[a._v("说明：代码被注释掉有两种可能性：\n"),s("ul",[s("li",[a._v("后续会恢复此段代码逻辑。")]),a._v(" "),s("li",[a._v("永久不用。前者如果没有备注信息，难以知晓注释动机。后者建议直接删掉（代码仓库保存了历史代码）。")])])])]),a._v(" "),s("h6",{attrs:{id:"_6-【参考】对于注释的要求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-【参考】对于注释的要求"}},[a._v("#")]),a._v(" 6. 【参考】对于注释的要求：")]),a._v(" "),s("p",[a._v("第一、能够准确反应设计思想和代码逻辑；")]),a._v("\n第二、能够描述业务含\n义，使别的程序员能够迅速了解到代码背后的信息。完全没有注释的大段代码对于阅读者形同天书，注释是给自己看的，即使隔很长时间，也能清晰理解当时的思路；注释也是给继任者看的，使其能够快速接替自己的工作。\n"),s("h6",{attrs:{id:"_7-【参考】好的命名、代码结构是自解释的-注释力求精简准确、表达到位。避免出现注释的一个极端-过多过滥的注释-代码的逻辑一旦修改-修改注释是相当大的负担。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-【参考】好的命名、代码结构是自解释的-注释力求精简准确、表达到位。避免出现注释的一个极端-过多过滥的注释-代码的逻辑一旦修改-修改注释是相当大的负担。"}},[a._v("#")]),a._v(" 7. 【参考】好的命名、代码结构是自解释的，注释力求精简准确、表达到位。避免出现注释的一个极端：过多过滥的注释，代码的逻辑一旦修改，修改注释是相当大的负担。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    反例：\n    // put elephant into fridge\n    put(elephant, fridge);\n    方法名 put，加上两个有意义的变量名 elephant和fridge，已经说明了这是在干什么，语义清晰的代码不需要额外的注释。\n")])])]),s("h3",{attrs:{id:"九-其它"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#九-其它"}},[a._v("#")]),a._v(" (九)其它")]),a._v(" "),s("h6",{attrs:{id:"_1-【推荐】任何数据结构的构造或初始化-都应指定大小-避免数据结构无限增长吃光内存。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-【推荐】任何数据结构的构造或初始化-都应指定大小-避免数据结构无限增长吃光内存。"}},[a._v("#")]),a._v(" 1. 【推荐】任何数据结构的构造或初始化，都应指定大小，避免数据结构无限增长吃光内存。")]),a._v(" "),s("h6",{attrs:{id:"_2-【推荐】及时清理不再使用的代码段或配置信息。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-【推荐】及时清理不再使用的代码段或配置信息。"}},[a._v("#")]),a._v(" 2. 【推荐】及时清理不再使用的代码段或配置信息。")]),a._v(" "),s("ul",[s("li",[a._v("说明：对于垃圾代码或过时配置，坚决清理干净，避免程序过度臃肿，代码冗余。")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    正例：对于暂时被注释掉，后续可能恢复使用的代码片断，在注释代码上方，统一规定使用三个斜杠(///)来说明注释掉代码的理由。 \n")])])]),s("h6",{attrs:{id:"【强制】任务或脚本-大变量要及时销毁-避免无用数据长期占用内存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#【强制】任务或脚本-大变量要及时销毁-避免无用数据长期占用内存"}},[a._v("#")]),a._v(" 【强制】任务或脚本，大变量要及时销毁，避免无用数据长期占用内存")]),a._v(" "),s("h2",{attrs:{id:"二、异常日志"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、异常日志"}},[a._v("#")]),a._v(" 二、异常日志")]),a._v(" "),s("h3",{attrs:{id:"一-异常处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一-异常处理"}},[a._v("#")]),a._v(" (一)异常处理")]),a._v(" "),s("p",[a._v("异常必须当时解决，不能抛到上层")]),a._v(" "),s("p",[a._v("https://blog.csdn.net/miss_mindada/article/details/79586866")]),a._v(" "),s("p",[a._v("https://blog.csdn.net/luolaifa000/article/details/80135787")]),a._v(" "),s("h2",{attrs:{id:"三、关于测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、关于测试"}},[a._v("#")]),a._v(" 三、关于测试")]),a._v(" "),s("ul",[s("li",[a._v("尽早/不断的进行测试")]),a._v(" "),s("li",[a._v("自测要充分完整，")]),a._v(" "),s("li",[a._v("既要选择有效合理的数据，也要选择无效不合理的数据")]),a._v(" "),s("li",[a._v("修改后要回归测试")])]),a._v(" "),s("h2",{attrs:{id:"四、结构分层"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、结构分层"}},[a._v("#")]),a._v(" 四、结构分层")]),a._v(" "),s("h3",{attrs:{id:"一-controller层的一些规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一-controller层的一些规范"}},[a._v("#")]),a._v(" (一) controller层的一些规范")]),a._v(" "),s("h6",{attrs:{id:"_5-【强制】-接口输出-所有向端提供的接口-字段名称需要精简-且不能返回无用数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-【强制】-接口输出-所有向端提供的接口-字段名称需要精简-且不能返回无用数据"}},[a._v("#")]),a._v(" 5. 【强制】 接口输出：所有向端提供的接口，字段名称需要精简，且不能返回无用数据")]),a._v(" "),s("h3",{attrs:{id:"二-model层的一些规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二-model层的一些规范"}},[a._v("#")]),a._v(" (二)model层的一些规范")]),a._v(" "),s("h6",{attrs:{id:"_1-禁止使用select-用到哪些字段获取哪些-需要哪些字段必须明确写明-feild方法必须存在"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-禁止使用select-用到哪些字段获取哪些-需要哪些字段必须明确写明-feild方法必须存在"}},[a._v("#")]),a._v(" 1. 禁止使用select * , 用到哪些字段获取哪些，需要哪些字段必须明确写明，feild方法必须存在")]),a._v(" "),s("ul",[s("li",[a._v("说明：\n"),s("ol",[s("li",[a._v("增加查询分析器解析成本")]),a._v(" "),s("li",[a._v("增减字段容易与 resultMap配置不一致")]),a._v(" "),s("li",[a._v("无用字段增加网络消耗，尤其是text类型的字段")]),a._v(" "),s("li",[a._v("联合查询必须写名表名")])])])]),a._v(" "),s("h6",{attrs:{id:"_2-不建议使用超过两个表的联合查询-model层应为最单一功能查询-复杂逻辑应放到控制层处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-不建议使用超过两个表的联合查询-model层应为最单一功能查询-复杂逻辑应放到控制层处理"}},[a._v("#")]),a._v(" 2. 不建议使用超过两个表的联合查询，model层应为最单一功能查询，复杂逻辑应放到控制层处理")]),a._v(" "),s("h6",{attrs:{id:"_3-联合查询的字段必须指明表名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-联合查询的字段必须指明表名"}},[a._v("#")]),a._v(" 3. 联合查询的字段必须指明表名")]),a._v(" "),s("h6",{attrs:{id:"_4-避免查询行数大于200的查询-如果分页不能满足需求-需考虑使用缓存等来优化查询速度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-避免查询行数大于200的查询-如果分页不能满足需求-需考虑使用缓存等来优化查询速度"}},[a._v("#")]),a._v(" 4. 避免查询行数大于200的查询，如果分页不能满足需求，需考虑使用缓存等来优化查询速度")]),a._v(" "),s("h6",{attrs:{id:"_5-所有的select语句必须经过explain的校验"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-所有的select语句必须经过explain的校验"}},[a._v("#")]),a._v(" 5. 所有的select语句必须经过explain的校验")]),a._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[a._v("【强制】自定义sql参数使用：{$parmas}，不要使用$params 此种方式容易出现 SQL 注入。")]),a._v(" "),s("li",[a._v("【推荐】更新接口里只更新需要更新的字段。")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("不要写一个大而全的数据更新接口。\n不管是不是自己的目标更新字段，都进行 update table set c1=value1,c2=value2,c3=value3; 这是不对的。\n执行 SQL时，不要更新无改动的字段，一是易出错；二是效率低；三是增加 binlog 存储。\n")])])]),s("h3",{attrs:{id:"三-其他"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三-其他"}},[a._v("#")]),a._v(" (三) 其他")]),a._v(" "),s("h6",{attrs:{id:"_1-【强制】严格按照目录结构存放文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-【强制】严格按照目录结构存放文件"}},[a._v("#")]),a._v(" 1. 【强制】严格按照目录结构存放文件")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("tp5目录 https://www.kancloud.cn/manual/thinkphp5_1/353950\n")])])]),s("h6",{attrs:{id:"_2-【推荐】第三方接口调用建议封装成工具类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-【推荐】第三方接口调用建议封装成工具类"}},[a._v("#")]),a._v(" 2. 【推荐】第三方接口调用建议封装成工具类")]),a._v(" "),s("h6",{attrs:{id:"_3-【强制】严格按照分层定义决定代码位置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-【强制】严格按照分层定义决定代码位置"}},[a._v("#")]),a._v(" 3. 【强制】严格按照分层定义决定代码位置")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    反例：\n        contoller层直接使用DB类\n    正例：\n        controller层处理具体业务逻辑，通过调用具体model层获取数据，而model层中才是查库写库相关操作\n")])])]),s("h6",{attrs:{id:"_4-公用方法提出封装成公共类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-公用方法提出封装成公共类"}},[a._v("#")]),a._v(" 4. 公用方法提出封装成公共类")]),a._v(" "),s("h6",{attrs:{id:"_5-【推荐】不要在视图模板中加入任何复杂的逻辑。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-【推荐】不要在视图模板中加入任何复杂的逻辑。"}},[a._v("#")]),a._v(" 5. 【推荐】不要在视图模板中加入任何复杂的逻辑。")]),a._v(" "),s("ul",[s("li",[a._v("说明：根据 MVC 理论，视图的职责是展示，不要抢模型和控制器的活。")])]),a._v(" "),s("h2",{attrs:{id:"五、mysql数据库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#五、mysql数据库"}},[a._v("#")]),a._v(" 五、mysql数据库")]),a._v(" "),s("h3",{attrs:{id:"一-建表规约"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一-建表规约"}},[a._v("#")]),a._v(" (一)建表规约")]),a._v(" "),s("h6",{attrs:{id:"_1-【强制】表达是与否概念的字段-必须使用-is-xxx-的方式命名-数据类型是-unsigned-tinyint-1-表示是-0-表示否-。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-【强制】表达是与否概念的字段-必须使用-is-xxx-的方式命名-数据类型是-unsigned-tinyint-1-表示是-0-表示否-。"}},[a._v("#")]),a._v(" 1. 【强制】表达是与否概念的字段，必须使用 is_xxx 的方式命名，数据类型是 unsigned tinyint（1 表示是，0 表示否）。")]),a._v(" "),s("ul",[s("li",[a._v("说明：任何字段如果为非负数，必须是 unsigned。")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    正例：表达逻辑删除的字段名 is_deleted，1 表示删除，0 表示未删除。\n")])])]),s("h6",{attrs:{id:"_2-【强制】表名、字段名必须使用小写字母或数字-禁止出现数字开头-禁止两个下划线中间只出现数字。数据库字段名的修改代价很大-因为无法进行预发布-所以字段名称需要慎重考虑。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-【强制】表名、字段名必须使用小写字母或数字-禁止出现数字开头-禁止两个下划线中间只出现数字。数据库字段名的修改代价很大-因为无法进行预发布-所以字段名称需要慎重考虑。"}},[a._v("#")]),a._v(" 2. 【强制】表名、字段名必须使用小写字母或数字，禁止出现数字开头，禁止两个下划线中间只出现数字。数据库字段名的修改代价很大，因为无法进行预发布，所以字段名称需要慎重考虑。")]),a._v(" "),s("ul",[s("li",[a._v("说明：MySQL 在 Windows 下不区分大小写，但在 Linux 下默认是区分大小写。因此，数据库名、\n表名、字段名，都不允许出现任何大写字母，避免节外生枝。")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    正例：aliyun_admin，rdc_config，level3_name\n    反例：AliyunAdmin，rdcConfig，level_3_name\n")])])]),s("h6",{attrs:{id:"_3-【强制】表名不使用复数名词。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-【强制】表名不使用复数名词。"}},[a._v("#")]),a._v(" 3. 【强制】表名不使用复数名词。")]),a._v(" "),s("ul",[s("li",[a._v("说明：表名应该仅仅表示表里面的实体内容，不应该表示实体数量，对应于 DO 类名也是单数\n形式，符合表达习惯。")])]),a._v(" "),s("h6",{attrs:{id:"_4-【强制】禁用保留字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-【强制】禁用保留字"}},[a._v("#")]),a._v(" 4. 【强制】禁用保留字")]),a._v(" "),s("p",[a._v("如 desc、range、match、delayed 等，请参考 MySQL 官方保留字。")]),a._v(" "),s("h6",{attrs:{id:"_5-【强制】主键索引名为pk-字段名-唯一索引名为-uk-字段名-普通索引名则为idx-字段名。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-【强制】主键索引名为pk-字段名-唯一索引名为-uk-字段名-普通索引名则为idx-字段名。"}},[a._v("#")]),a._v(" 5. 【强制】主键索引名为pk_字段名；唯一索引名为 uk_字段名；普通索引名则为idx_字段名。")]),a._v(" "),s("p",[a._v("-说明：pk_ 即 primary key；uk_ 即 unique key；idx_ 即 index 的简称。")]),a._v(" "),s("h6",{attrs:{id:"_6-【强制】小数类型为-decimal-禁止使用-float-和-double。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-【强制】小数类型为-decimal-禁止使用-float-和-double。"}},[a._v("#")]),a._v(" 6. 【强制】小数类型为 decimal，禁止使用 float 和 double。")]),a._v(" "),s("ul",[s("li",[a._v("说明：float 和 double 在存储的时候，存在精度损失的问题，很可能在值的比较时，得到不\n正确的结果。如果存储的数据范围超过 decimal 的范围，建议将数据拆成整数和小数分开存储。")])]),a._v(" "),s("h6",{attrs:{id:"_7-【强制】如果存储的字符串长度几乎相等-使用-char-定长字符串类型。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-【强制】如果存储的字符串长度几乎相等-使用-char-定长字符串类型。"}},[a._v("#")]),a._v(" 7. 【强制】如果存储的字符串长度几乎相等，使用 char 定长字符串类型。")]),a._v(" "),s("h6",{attrs:{id:"_8-【强制】varchar-是可变长字符串-不预先分配存储空间-长度不要超过-5000-如果存储长度大于此值-定义字段类型为-text-独立出来一张表-用主键来对应-避免影响其它字段索引效率。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-【强制】varchar-是可变长字符串-不预先分配存储空间-长度不要超过-5000-如果存储长度大于此值-定义字段类型为-text-独立出来一张表-用主键来对应-避免影响其它字段索引效率。"}},[a._v("#")]),a._v(" 8. 【强制】varchar 是可变长字符串，不预先分配存储空间，长度不要超过 5000，如果存储长度大于此值，定义字段类型为 text，独立出来一张表，用主键来对应，避免影响其它字段索引效率。")]),a._v(" "),s("h6",{attrs:{id:"_9-【强制】表必备三字段-id-gmt-create-gmt-modified。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-【强制】表必备三字段-id-gmt-create-gmt-modified。"}},[a._v("#")]),a._v(" 9. 【强制】表必备三字段：id, gmt_create, gmt_modified。")]),a._v(" "),s("ul",[s("li",[a._v("说明：其中 id 必为主键，类型为 bigint unsigned、单表时自增、步长为 1。")]),a._v(" "),s("li",[a._v("gmt_create,gmt_modified 的类型均为 datetime 类型，前者现在时表示主动创建，后者过去分词表示被动更新。")])]),a._v(" "),s("h6",{attrs:{id:"_10-【推荐】表的命名最好是加上-业务名称-表的作用-。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-【推荐】表的命名最好是加上-业务名称-表的作用-。"}},[a._v("#")]),a._v(" 10. 【推荐】表的命名最好是加上“业务名称_表的作用”。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    正例：alipay_task / force_project / trade_config\n")])])]),s("h6",{attrs:{id:"_10-【推荐】库名与应用名称尽量一致。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-【推荐】库名与应用名称尽量一致。"}},[a._v("#")]),a._v(" 10. 【推荐】库名与应用名称尽量一致。")]),a._v(" "),s("h6",{attrs:{id:"_11-【强制】如果修改字段含义或对字段表示的状态追加时-需要及时更新字段注释。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-【强制】如果修改字段含义或对字段表示的状态追加时-需要及时更新字段注释。"}},[a._v("#")]),a._v(" 11. 【强制】如果修改字段含义或对字段表示的状态追加时，需要及时更新字段注释。")]),a._v(" "),s("h6",{attrs:{id:"_12-【推荐】字段允许适当冗余-以提高查询性能-但必须考虑数据一致。冗余字段应遵循"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-【推荐】字段允许适当冗余-以提高查询性能-但必须考虑数据一致。冗余字段应遵循"}},[a._v("#")]),a._v(" 12. 【推荐】字段允许适当冗余，以提高查询性能，但必须考虑数据一致。冗余字段应遵循：")]),a._v(" "),s("ul",[s("li",[a._v("不是频繁修改的字段。")]),a._v(" "),s("li",[a._v("不是 varchar 超长字段，更不能是 text 字段。")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    正例：\n    商品类目名称使用频率高，字段长度短，名称基本一成不变，可在相关联的表中冗余存储类目名称，避免关联查询。\n")])])]),s("h6",{attrs:{id:"_13-【推荐】单表行数超过-500-万行或者单表容量超过-2gb-才推荐进行分库分表。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-【推荐】单表行数超过-500-万行或者单表容量超过-2gb-才推荐进行分库分表。"}},[a._v("#")]),a._v(" 13. 【推荐】单表行数超过 500 万行或者单表容量超过 2GB，才推荐进行分库分表。")]),a._v(" "),s("ul",[s("li",[a._v("说明：如果预计三年后的数据量根本达不到这个级别，请不要在创建表时就分库分表。")])]),a._v(" "),s("h6",{attrs:{id:"_14-【参考】合适的字符存储长度-不但节约数据库表空间、节约索引存储-更重要的是提升检索速度。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-【参考】合适的字符存储长度-不但节约数据库表空间、节约索引存储-更重要的是提升检索速度。"}},[a._v("#")]),a._v(" 14. 【参考】合适的字符存储长度，不但节约数据库表空间、节约索引存储，更重要的是提升检索速度。")]),a._v(" "),s("p",[a._v("正例：如下表，其中无符号值可以避免误存负，且扩大了表示范围。")]),a._v(" "),s("table",[s("thead",[s("tr",[s("th",[a._v("对象")]),a._v(" "),s("th",[a._v("年龄区间")]),a._v(" "),s("th",[a._v("类型")]),a._v(" "),s("th",[a._v("字节")]),a._v(" "),s("th",[a._v("表示范围")])])]),a._v(" "),s("tbody",[s("tr",[s("td",[a._v("人")]),a._v(" "),s("td",[a._v("150 岁之内")]),a._v(" "),s("td",[a._v("tinyint unsigned")]),a._v(" "),s("td",[a._v("1")]),a._v(" "),s("td",[a._v("无符号值：0 到 255")])]),a._v(" "),s("tr",[s("td",[a._v("龟")]),a._v(" "),s("td",[a._v("数百岁")]),a._v(" "),s("td",[a._v("smallint unsigned")]),a._v(" "),s("td",[a._v("2")]),a._v(" "),s("td",[a._v("无符号值：0 到 65535")])]),a._v(" "),s("tr",[s("td",[a._v("恐龙化石")]),a._v(" "),s("td",[a._v("数千万年")]),a._v(" "),s("td",[a._v("int unsigned")]),a._v(" "),s("td",[a._v("4")]),a._v(" "),s("td",[a._v("无符号值：0 到约 42.9 亿")])]),a._v(" "),s("tr",[s("td",[a._v("太阳")]),a._v(" "),s("td",[a._v("约 50 亿年")]),a._v(" "),s("td",[a._v("bigint unsigned")]),a._v(" "),s("td",[a._v("8")]),a._v(" "),s("td",[a._v("无符号值：0 到约 10 的 19 次方")])])])]),a._v(" "),s("h3",{attrs:{id:"二-索引规约"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二-索引规约"}},[a._v("#")]),a._v(" (二)索引规约")]),a._v(" "),s("h6",{attrs:{id:"_1-【强制】业务上具有唯一特性的字段-即使是多个字段的组合-也必须建成唯一索引。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-【强制】业务上具有唯一特性的字段-即使是多个字段的组合-也必须建成唯一索引。"}},[a._v("#")]),a._v(" 1. 【强制】业务上具有唯一特性的字段，即使是多个字段的组合，也必须建成唯一索引。")]),a._v(" "),s("ul",[s("li",[a._v("说明：不要以为唯一索引影响了 insert 速度，这个速度损耗可以忽略，但提高查找速度是明\n显的；另外，即使在应用层做了非常完善的校验控制，只要没有唯一索引，根据墨菲定律，必\n然有脏数据产生。")])]),a._v(" "),s("h6",{attrs:{id:"_2-【强制】超过三个表禁止-join。需要-join-的字段-数据类型必须绝对一致-多表关联查询时-保证被关联的字段需要有索引。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-【强制】超过三个表禁止-join。需要-join-的字段-数据类型必须绝对一致-多表关联查询时-保证被关联的字段需要有索引。"}},[a._v("#")]),a._v(" 2. 【强制】超过三个表禁止 join。需要 join 的字段，数据类型必须绝对一致；多表关联查询时，保证被关联的字段需要有索引。")]),a._v(" "),s("ul",[s("li",[a._v("说明：即使双表 join 也要注意表索引、SQL 性能。")])]),a._v(" "),s("h6",{attrs:{id:"_3-【强制】在-varchar-字段上建立索引时-必须指定索引长度-没必要对全字段建立索引-根据实际文本区分度决定索引长度即可。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-【强制】在-varchar-字段上建立索引时-必须指定索引长度-没必要对全字段建立索引-根据实际文本区分度决定索引长度即可。"}},[a._v("#")]),a._v(" 3. 【强制】在 varchar 字段上建立索引时，必须指定索引长度，没必要对全字段建立索引，根据实际文本区分度决定索引长度即可。")]),a._v(" "),s("ul",[s("li",[a._v("说明：索引的长度与区分度是一对矛盾体，一般对字符串类型数据，长度为 20 的索引，区分\n度会高达 90%以上，可以使用 count(distinct left(列名, 索引长度))/count(*)的区分度\n来确定。")])]),a._v(" "),s("h6",{attrs:{id:"_4-【强制】页面搜索严禁左模糊或者全模糊-如果需要请走搜索引擎来解决。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-【强制】页面搜索严禁左模糊或者全模糊-如果需要请走搜索引擎来解决。"}},[a._v("#")]),a._v(" 4. 【强制】页面搜索严禁左模糊或者全模糊，如果需要请走搜索引擎来解决。")]),a._v(" "),s("p",[a._v("说明：索引文件具有 B-Tree 的最左前缀匹配特性，如果左边的值未确定，那么无法使用此索\n引。")]),a._v(" "),s("h6",{attrs:{id:"_5-【推荐】如果有-order-by-的场景-请注意利用索引的有序性。order-by-最后的字段是组合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-【推荐】如果有-order-by-的场景-请注意利用索引的有序性。order-by-最后的字段是组合"}},[a._v("#")]),a._v(" 5. 【推荐】如果有 order by 的场景，请注意利用索引的有序性。order by 最后的字段是组合")]),a._v(" "),s("p",[a._v("索引的一部分，并且放在索引组合顺序的最后，避免出现 file_sort 的情况，影响查询性能。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    正例：where a=? and b=? order by c; 索引：a_b_c\n    反例：索引中有范围查找，那么索引有序性无法利用，如：WHERE a>10 ORDER BY b; 索引a_b 无法排序。\n")])])]),s("h6",{attrs:{id:"_6-【推荐】利用覆盖索引来进行查询操作-避免回表。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-【推荐】利用覆盖索引来进行查询操作-避免回表。"}},[a._v("#")]),a._v(" 6. 【推荐】利用覆盖索引来进行查询操作，避免回表。")]),a._v(" "),s("ul",[s("li",[a._v("说明：如果一本书需要知道第 11 章是什么标题，会翻开第 11 章对应的那一页吗？目录浏览\n一下就好，这个目录就是起到覆盖索引的作用。")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    正例：能够建立索引的种类分为主键索引、唯一索引、普通索引三种，而覆盖索引只是一种查\n询的一种效果，用 explain 的结果，extra 列会出现：using index。\n")])])]),s("h6",{attrs:{id:"_7-【推荐】利用延迟关联或者子查询优化超多分页场景。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-【推荐】利用延迟关联或者子查询优化超多分页场景。"}},[a._v("#")]),a._v(" 7. 【推荐】利用延迟关联或者子查询优化超多分页场景。")]),a._v(" "),s("ul",[s("li",[a._v("说明：MySQL 并不是跳过 offset 行，而是取 offset+N 行，然后返回放弃前 offset 行，返回\nN 行，那当 offset 特别大的时候，效率就非常的低下，要么控制返回的总页数，要么对超过\n特定阈值的页数进行 SQL 改写。")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("`正例：先快速定位需要获取的 id 段，然后再关联：\n SELECT a.* FROM 表 1 a, (select id from 表 1 where 条件 LIMIT 100000,20 ) b where a.id=b.id\n")])])]),s("h6",{attrs:{id:"_8-【推荐】建组合索引的时候-区分度最高的在最左边。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-【推荐】建组合索引的时候-区分度最高的在最左边。"}},[a._v("#")]),a._v(" 8. 【推荐】建组合索引的时候，区分度最高的在最左边。")]),a._v(" "),s("p",[a._v("正例：如果 where a=? and b=? ，如果 a 列的几乎接近于唯一值，那么只需要单建 idx_a\n索引即可。\n说明：存在非等号和等号混合时，在建索引时，请把等号条件的列前置。如：where c>? and\nd=? 那么即使 c 的区分度更高，也必须把 d 放在索引的最前列，即索引 idx_d_c。")]),a._v(" "),s("h6",{attrs:{id:"_9-【推荐】防止因字段类型不同造成的隐式转换-导致索引失效。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-【推荐】防止因字段类型不同造成的隐式转换-导致索引失效。"}},[a._v("#")]),a._v(" 9. 【推荐】防止因字段类型不同造成的隐式转换，导致索引失效。")]),a._v(" "),s("h6",{attrs:{id:"_10-【参考】创建索引时避免有如下极端误解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-【参考】创建索引时避免有如下极端误解"}},[a._v("#")]),a._v(" 10. 【参考】创建索引时避免有如下极端误解：")]),a._v(" "),s("p",[a._v("1）宁滥勿缺。认为一个查询就需要建一个索引。\n2）宁缺勿滥。认为索引会消耗空间、严重拖慢更新和新增速度。\n3）抵制惟一索引。认为业务的惟一性一律需要在应用层通过“先查后插”方式解决。")]),a._v(" "),s("h3",{attrs:{id:"三-sql-语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三-sql-语句"}},[a._v("#")]),a._v(" (三)SQL 语句")]),a._v(" "),s("h6",{attrs:{id:"_1-禁止使用count-列名-或count-1-来替代count"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-禁止使用count-列名-或count-1-来替代count"}},[a._v("#")]),a._v(" 1 禁止使用count(列名)或count(1) 来替代count(*)")]),a._v(" "),s("h6",{attrs:{id:"_2-【强制】使用-isnull-来判断是否为-null-值。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-【强制】使用-isnull-来判断是否为-null-值。"}},[a._v("#")]),a._v(" 2. 【强制】使用 ISNULL()来判断是否为 NULL 值。")]),a._v(" "),s("ul",[s("li",[a._v("说明：NULL 与任何值的直接比较都为 NULL。\n"),s("ol",[s("li",[a._v("NULL<>NULL 的返回结果是 NULL，而不是 false。")]),a._v(" "),s("li",[a._v("NULL=NULL 的返回结果是 NULL，而不是 true。")]),a._v(" "),s("li",[a._v("NULL<>1 的返回结果是 NULL，而不是 true。")])])])]),a._v(" "),s("h6",{attrs:{id:"_3-【强制】在代码中写分页查询逻辑时-若-count-为-0-应直接返回-避免执行后面的分页语句。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-【强制】在代码中写分页查询逻辑时-若-count-为-0-应直接返回-避免执行后面的分页语句。"}},[a._v("#")]),a._v(" 3. 【强制】在代码中写分页查询逻辑时，若 count 为 0 应直接返回，避免执行后面的分页语句。")]),a._v(" "),s("h6",{attrs:{id:"_4-【强制】不得使用外键与级联-一切外键概念必须在应用层解决。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-【强制】不得使用外键与级联-一切外键概念必须在应用层解决。"}},[a._v("#")]),a._v(" 4. 【强制】不得使用外键与级联，一切外键概念必须在应用层解决。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    说明：\n    以学生和成绩的关系为例，\n    学生表中的 student_id是主键，那么成绩表中的 student_id则为外键。\n    如果更新学生表中的 student_id，同时触发成绩表中的 student_id 更新，即为级联更新。\n    外键与级联更新适用于单机低并发，不适合分布式、高并发集群；级联更新是强阻\n    塞，存在数据库更新风暴的风险；外键影响数据库的插入速度。\n")])])]),s("h6",{attrs:{id:"_5-【强制】禁止使用存储过程-存储过程难以调试和扩展-更没有移植性。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-【强制】禁止使用存储过程-存储过程难以调试和扩展-更没有移植性。"}},[a._v("#")]),a._v(" 5. 【强制】禁止使用存储过程，存储过程难以调试和扩展，更没有移植性。")]),a._v(" "),s("h6",{attrs:{id:"_6-【强制】数据订正-特别是删除、修改记录操作-时-要先-select-避免出现误删除-确认无误才能执行更新语句。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-【强制】数据订正-特别是删除、修改记录操作-时-要先-select-避免出现误删除-确认无误才能执行更新语句。"}},[a._v("#")]),a._v(" 6. 【强制】数据订正（特别是删除、修改记录操作）时，要先 select，避免出现误删除，确认无误才能执行更新语句。")]),a._v(" "),s("h6",{attrs:{id:"_7-【推荐】in-操作能避免则避免-若实在避免不了-需要仔细评估-in-后边的集合元素数量-控制在-1000-个之内。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-【推荐】in-操作能避免则避免-若实在避免不了-需要仔细评估-in-后边的集合元素数量-控制在-1000-个之内。"}},[a._v("#")]),a._v(" 7. 【推荐】in 操作能避免则避免，若实在避免不了，需要仔细评估 in 后边的集合元素数量，控制在 1000 个之内。")]),a._v(" "),s("h6",{attrs:{id:"_10-【参考】如果有国际化需要-所有的字符存储与表示-均以-utf-8-编码-注意字符统计函数的区别。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-【参考】如果有国际化需要-所有的字符存储与表示-均以-utf-8-编码-注意字符统计函数的区别。"}},[a._v("#")]),a._v(" 10. 【参考】如果有国际化需要，所有的字符存储与表示，均以 utf-8 编码，注意字符统计函数的区别。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('说明：\nSELECT LENGTH("轻松工作")； 返回为 12\nSELECT CHARACTER_LENGTH("轻松工作")； 返回为 4\n如果需要存储表情，那么选择 utf8mb4 来进行存储，注意它与 utf-8 编码的区别。\n')])])])])}),[],!1,null,null,null);t.default=r.exports}}]);